{"id":"jira_summary","version":"1.1.0","purpose":"Summarize Jira issue for standup/triage","template":"Issue: {{ jira.key }} — {{ jira.summary }}\n\nAcceptance Criteria:\n{{ jira.acceptance_criteria | default(\"- n/a\") }}\n\nDescription:\n{{ jira.description | default(\"- n/a\") }}\n\nWhat we know:\n- Reporter: {{ jira.reporter }}\n- Priority: {{ jira.priority }}\n- Labels: {{ jira.labels | join(\", \") if jira.labels else \"-\" }}\n\nUnknowns / Risks:\n{{ unknowns | default(\"- none identified\") }}\n\nNext Actions (owner → task):\n{{ next_actions | default(\"- assign and define next steps\") }}"}
{"id":"git_mr_template","version":"1.0.0","purpose":"Generate GitLab MR description with checklist","template":"**Title:** {{ title }}\n\n**Summary**\n{{ summary }}\n\n**Changes**\n{{ changes }}\n\n**Checks**\n- [ ] Unit tests pass\n- [ ] Config split verified\n- [ ] Back-merge plan prepared\n- [ ] Pipeline green\n\n**Related**\n- Jira: {{ jira.key }}\n- Pipeline: {{ pipeline_url | default(\"n/a\") }}"}
{"id":"release_notes","version":"1.0.0","purpose":"Compose release notes","template":"# Release {{ release_tag }} ({{ date }})\n\n## Highlights\n{{ highlights }}\n\n## Changes by Component\n{{ changes_by_component }}\n\n## Rollback\n{{ rollback_plan }}\n\n## Credits\n{{ contributors | join(\", \") }}"}
{"id":"commit_message","version":"1.0.0","purpose":"Conventional commit message from Jira + context","template":"{{ type | default(\"feat\") }}: {{ jira.key if jira else \"TASK\" }} — {{ title }}\n\n{{ body | default(\"\") }}\n\nRefs: {{ jira.key if jira else \"n/a\" }}"}
{"id":"code_author_plan","version":"1.0.0","purpose":"Derive a minimal task/file plan from a Jira ticket (Drupal 10/11)","template":"Context:\n- Issue: {{ jira.key }} — {{ jira.summary }}\n- Acceptance Criteria:\n{{ jira.acceptance_criteria | default(\"- n/a\") }}\n- Labels: {{ jira.labels | join(\", \") if jira.labels else \"-\" }}\n\nTask Plan (concise):\n1) Goal: <one line>\n2) Files to create/update (absolute, under web/ or repo root):\n   - ...\n3) Steps:\n   - ...\n4) Risks/Unknowns:\n   - ...\n5) Validation:\n   - commands and checks to verify (drush status, php -l, phpcs, phpstan)\n\nReturn the plan as clear bullet points. Avoid code here."}
{"id":"code_author_diff","version":"1.0.0","purpose":"Produce a unified diff implementing one task for a Drupal repo","template":"You are editing a Drupal 10/11 repository. Implement the following task:\n\nTask:\n{{ task_text }}\n\nRepository rules:\n- Only modify within allow-list: web/modules/custom/**, web/themes/custom/**, web/profiles/**, config/**, tests/**, scripts/**.\n- Use Drupal best practices: dependency injection, services.yml, cacheability metadata.\n- Prefer minimal, focused changes. If scaffolding a module, include only essential boilerplate.\n- Output only a unified diff (no prose, no code fences). Patch must apply with `git apply` from repo root.\n\nIf a file does not exist, create it in the diff. Include correct paths. Keep the patch small and targeted."}
{"id":"code_review_selfcheck","version":"1.0.0","purpose":"Summarize quick self-review and next actions for the MR","template":"- What changed: <short summary>\n- Risks: <list key risks>\n- Missing tests: <describe tests to add>\n- Lint/Static: phpcs/phpstan status\n- Config considerations: splits, updates, schema\n- Cacheability: contexts/tags/max-age sanity\n- Rollback: how to revert if needed\n- Next actions: checklist for reviewer/author"}
