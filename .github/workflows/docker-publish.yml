name: Publish Docker images (GHCR)

on:
  push:
    branches: [ main ]
    # e.g. v0.1.0
    tags: [ 'v*' ]
  workflow_dispatch: {}

# needed for GHCR + provenance
permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    name: Build & Push (${{ matrix.service }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - service: api
            context: .
            dockerfile: docker/api.Dockerfile
          - service: web
            context: ui
            dockerfile: ../docker/web.Dockerfile
          - service: cli
            context: .
            dockerfile: docker/cli.Dockerfile

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate tags & labels (latest on default branch, semver on tags, sha always)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          # NOTE: you can add more tag styles if you want
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},enable={{startsWith(github.ref, 'refs/tags/')}}

      - name: Build & Push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

          # supply BuildKit cache
          cache-from: type=gha
          cache-to: type=gha,mode=max

          # supply provenance + SBOM (SLSA-style attestation + SPDX SBOM)
          provenance: true
          sbom: true

      - name: Summary
        run: |
          echo "Pushed image(s):"
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n'
