name: Publish containers to GHCR

on:
  push:
    branches: [ main ]
    paths:
      - "api.Dockerfile"
      - "web.Dockerfile"
      - "cli.Dockerfile"
      - "docker/**"
      - "server/**"
      - "copilot/**"
      - "ui/**"
      - "pages/**"
      - "**/*.py"
      - "**/*.ts"
      - "**/*.tsx"
      - "package.json"
      - "pyproject.toml"
      - ".github/workflows/publish-ghcr.yml"
  release:
    types: [ published ]
  workflow_dispatch:

# GitHub needs these to push to ghcr.io
permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_BASE: ghcr.io/${{ github.repository_owner }}/drupal-devops-copilot

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: api
            dockerfile: api.Dockerfile
            context: .
          - name: web
            dockerfile: web.Dockerfile
            context: .
          - name: cli
            dockerfile: cli.Dockerfile
            context: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_BASE }}-${{ matrix.name }}
          tags: |
            # sha tag (always)
            type=sha,format=long
            # branch tag for main → :latest
            type=raw,value=latest,enable={{is_default_branch}}
            # git tag like v0.1.0 → :v0.1.0
            type=ref,event=tag

      - name: Build & Push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
